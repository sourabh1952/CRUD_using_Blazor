@page "/"
@using Mygame.Client.Models
@using Mygame.Client
@inject NavigationManager NavigationManager


<PageTitle>Game Catalog</PageTitle>

<h1>Game Catalog</h1>

<div class="row mb-4">
    <div class="col-sm-6">
        <button type="button" class="btn btn-primary" @onclick = "CreateGame">New Game </button>
    </div>
</div>

@if (games is null)
{
    <p><em>loding....</em></p>
}
else
{
    <DeleteGame Game="@currentGame" OnClose="@OnDeleteModalClose">
    </DeleteGame>
    <table class="table">
    <thead>
    <th>Id</th>
    <th>Name</th>
    <th>Genre</th>
    <th>Price</th>
    <th>ReleaseDate</th>
    <th></th>
    </thead>
    <tbody>
    @foreach (var game in games)
    {
        <tr>
            <td>@game.Id</td>
            <td>@game.Name</td>
            <td>@game.Genre</td>
            <td>@game.Price</td>
            <td>@game.ReleaseDate.ToString("MM/dd/yyyy")</td>
            <td>
            <button class="btn btn-primary" @onclick="(()=>EditGame(game.Id))">Edit</button>
            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal" @onclick="(()=> currentGame=game)">Delete</button>
            </td>
        </tr>
    }
    </tbody>
</table>
}




@code
{
    private Game[]? games;
    private Game? currentGame;

    protected override void OnInitialized()
    {
        games = GameClient.GetGames();
    }

    private void CreateGame()
    {
        NavigationManager.NavigateTo("/game");
    }

    private void EditGame(int id)
    {
        NavigationManager.NavigateTo($"/game/{id}");
    }

    private void OnDeleteModalClose(bool accepted)
    {
        if(accepted)
        {
            GameClient.DeleteGame(currentGame!.Id);
            games = GameClient.GetGames();
        }
    }
}