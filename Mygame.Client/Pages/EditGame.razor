@page "/game"
@page "/game/{id:int}"
@using Mygame.Client.Models
@using Mygame.Client
@inject NavigationManager NavigationManager

<PageTitle>@title </PageTitle>
<h1>Game Catalog </h1>
<h3>@title</h3>

@if (game is null)
{
    <p><em>loding....</em></p>
}
else
{
    <div class="row">
    <div class="col-sm-4">
        <EditForm Model="@game" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
            <div class = "mb-3">
                <label for="name" class="form-label">Name:</label>
                <input type="text" id = "name" @bind="game.Name" class="form-control" />
            </div>

            <div class = "mb-3">
                <label for="genre" class="form-label">Genre:</label>
                <!-- <input type="text" id = "genre" @bind-value="game.Genre" class="form-control" /> -->
                <select id="genre" @bind="game.Genre" class="form-select">
                    <option value="">Select Genre</option>
                    <option value="fight">Fight</option>
                    <option value="race">Race</option>
                    <option value="sports">Sports</option>
                </select>
            </div>

            <div class = "mb-3">
                <label for="price" class="form-label">Price : </label>
                <input type="number" id = "price" @bind="game.Price" class="form-control" />
            </div>

            <div class = "mb-3">
                <label for="releaseDate" class="form-label">Release Date : </label>
                <input type="date" id = "releaseDate" @bind="game.ReleaseDate" class="form-control" />
            </div>
        
        <button type="submit" class = "btn btn-primary">Save </button>
        <button type="button" class = "btn btn-secondary" @onclick="CancelGame">Cancel </button>
        </EditForm>
    </div>
</div>
}



@code {

    [Parameter]
    public int? Id { get; set; }


    private Game? game ;
    private string title = string.Empty;

    protected override void OnParametersSet()
    {
        if(Id is not null)
        {
            Game foundGame = GameClient.GetGame(Id.Value);
            game  = new()
            {
                Id = foundGame.Id,
                Name = foundGame.Name,
                Genre = foundGame.Genre,
                Price = foundGame.Price,
                ReleaseDate = foundGame.ReleaseDate
            };
            title = $"Edit {game.Name}";
        }
        else
        {
            game = new()
            {
                Name = string.Empty,
                Genre = string.Empty,
                ReleaseDate = DateTime.UtcNow
            };
            title = "New Game";
        }
    }

    private void HandleSubmit()
    {
        if(game!.Id == 0)
        {
            GameClient.AddGame(game);
        }
        else 
        {
            GameClient.UpdateGame(game);
        }
        NavigationManager.NavigateTo("/");
    }

    private void CancelGame()
    {
        NavigationManager.NavigateTo("/");
    }
}
